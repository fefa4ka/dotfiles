# Docs
# fn

# cmd
# lcmd
# rcmd
#
# shift
# lshift
# rshift
#
# alt
# lalt
# ralt
#
# ctrl
# lctrl
# rctrl

# "return"     (kVK_Return)
# "tab"        (kVK_Tab)
# "space"      (kVK_Space)
# "backspace"  (kVK_Delete)
# "escape"     (kVK_Escape)
#
# The following keys can not be used with the fn-modifier:
#
# "delete"     (kVK_ForwardDelete)
# "home"       (kVK_Home)
# "end"        (kVK_End)
# "pageup"     (kVK_PageUp)
# "pagedown"   (kVK_PageDown)
# "insert"     (kVK_Help)
# "left"       (kVK_LeftArrow)
# "right"      (kVK_RightArrow)
# "up"         (kVK_UpArrow)
# "down"       (kVK_DownArrow)
# "f1"         (kVK_F1)
# "f2"         (kVK_F2)
# "f3"         (kVK_F3)
# "f4"         (kVK_F4)
# "f5"         (kVK_F5)
# "f6"         (kVK_F6)
# "f7"         (kVK_F7)
# "f8"         (kVK_F8)
# "f9"         (kVK_F9)
# "f10"        (kVK_F10)
# "f11"        (kVK_F11)
# "f12"        (kVK_F12)
# "f13"        (kVK_F13)
# "f14"        (kVK_F14)
# "f15"        (kVK_F15)
# "f16"        (kVK_F16)
# "f17"        (kVK_F17)
# "f18"        (kVK_F18)
# "f19"        (kVK_F19)
# "f20"        (kVK_F20)
#
# "sound_up"          (NX_KEYTYPE_SOUND_UP)
# "sound_down"        (NX_KEYTYPE_SOUND_DOWN)
# "mute"              (NX_KEYTYPE_MUTE)
# "play"              (NX_KEYTYPE_PLAY)
# "previous"          (NX_KEYTYPE_PREVIOUS)
# "next"              (NX_KEYTYPE_NEXT)
# "rewind"            (NX_KEYTYPE_REWIND)
# "fast"              (NX_KEYTYPE_FAST)
# "brightness_up"     (NX_KEYTYPE_BRIGHTNESS_UP)
# "brightness_down"   (NX_KEYTYPE_BRIGHTNESS_DOWN)
# "illumination_up"   (NX_KEYTYPE_ILLUMINATION_UP)
# "illumination_down" (NX_KEYTYPE_ILLUMINATION_DOWN)
# hyper (cmd + shift + alt + ctrl)
#
# meh (shift + alt + ctrl)
#
# Keycodes https://cloud.githubusercontent.com/assets/6175959/18551554/35137fc6-7b59-11e6-81a0-bef19ed5db5e.png
# Good config reference https://github.com/yanzhang0219/dotfiles/blob/master/.config/skhd/skhdrc

.blacklist [
    "SketchUp"
    "Blender"
    "KiCad"
]

# Mode declaration
# 1) default: all keybindings are available
# 2) passthrough: all keybindings are unavailable. (If some keybindings conflict with some application, we can turn off skhd)
:: default : osascript -e "display notification \"enabled\" with title \"skhd\""

:: passthrough : osascript -e "display notification \"disabled\" with title \"skhd\""

# Mode switching
hyper - x ; passthrough
passthrough < hyper - x ; default


# Window Management
## Fullscreen Toggles
alt - z              : yabai -m window --toggle zoom-parent
alt + shift - z      : yabai -m window --toggle zoom-fullscreen
alt - b              : [[ "$(spacebar -m config height)" == "0" ]] && (spacebar -m config height 32) || (spacebar -m config height 0)

#cmd + shift - k      :  SPACE_ID=$(yabai -m query --spaces --space | jq '.index') && \
#                        WIN_ID=$(yabai -m query --windows | jq '.[] | select(.title | contains("Telegram")) | .id') && \
#                        yabai -m window --focus $WIN_ID && \
#                        yabai -m window --space $SPACE_ID && \
#                        sleep 0.3 && \
#                        yabai -m window --focus $WIN_ID && \
#                        $([[ $(yabai -m query --windows --window | jq ".is-floating") == "false" ]] && yabai -m window --toggle float || echo true) && \
#                        yabai -m window --grid 20:12:9:10:3:6
#
#cmd + shift - b      :  SPACE_ID=$(yabai -m query --spaces --space | jq '.index') && \
#                        WIN_ID=$(yabai -m query --windows | jq '.[] | select(.title | contains("Obsidian")) | .id') && \
#                        yabai -m window --focus $WIN_ID && \
#                        yabai -m window --space $SPACE_ID && \
#                        sleep 0.3 && \
#                        yabai -m window --focus $WIN_ID && \
#                        $([[ $(yabai -m query --windows --window | jq ".is-floating") == "false" ]] && yabai -m window --toggle float || echo true) && \
#                        yabai -m window --grid 12:10:6:0:4:6

# Reload
meh - r              : skhd --restart-service && yabai --restart-service && launchctl kickstart -k "gui/${UID}/homebrew.mxcl.spacebar"

# Applications
# cmd - return         : open -na Alacritty 
# /Applications/Alacritty.app/Contents/MacOS/alacritty --title "CLI" 
#cmd + shift - v      : vimr
#cmd + shift - e      : ~/.local/bin/xmenucommand
# cmd + shift - m      : ~/.local/bin/xmenutmux
#cmd + shift - v      : /Applications/Alacritty.app/Contents/MacOS/alacritty --title "Finder" -e "sh" -c 'vifm'
# cmd + shift - y      : /Applications/Alacritty.app/Contents/MacOS/alacritty --title "yandex vm" -e "sh" -c "ssh fefa4ka@fefa4ka.sas.yp-c.yandex.net"
#
# cmd - m              : LC_ALL=en_US.UTF-8 WITHOUT_TMUX=true /Applications/Alacritty.app/Contents/MacOS/alacritty --title "Mail" -e "zsh" -c "neomutt"
#cmd - h            : ~/.local/bin/how
cmd + shift - return : open -na Vivaldi
#cmd + shift - f : ~/.local/bin/xmenufinder
cmd + shift - u      : ~/.local/bin/xmenutty

cmd + shift - g              : ~/.local/bin/xmenubrowse
cmd + shift - y              : ~/.local/bin/xmenuyoutube
#cmd + shift - 3              : ~/.local/bin/xmenunotes
#cmd + shift - 2              : ~/.local/bin/xmenuat
cmd + shift - d              : xmenu_combined_run -fn 'FiraCode Nerd Font' -p 'run:'


# show all scratchpad windows if inaccessible due to yabai restart or crash
# cmd + alt - r : yabai -m window --scratchpad recover

# toggle scratchpad windows or launch application if not running
cmd + ctrl - t : yabai -m window --toggle telegram || open -a Telegram 
cmd + ctrl - o : yabai -m window --toggle obsidian  || open -a Obsidian 
cmd + ctrl - m : yabai -m window --toggle calendar || open -a Calendar
cmd + ctrl - b : yabai -m window --toggle chatbot || open -a Chatbox 
cmd + ctrl - b : yabai -m window --toggle chatbot || open -a Chatbox 
alt - 0x32 : yabai -m window --toggle browser || open -a Vivaldi 
cmd - 0x32 : yabai -m window --toggle console && (is_visible=$(yabai -m query --windows | jq '.[] | select(.title == "console") | ."is-visible"') && [ "$is_visible" = "true" ] && yabai -m window --grid 1:1:0:0:1:1 || true) || WITH_TMUX=true kitty --title console --listen-on unix:/tmp/kitty-console
cmd + shift - 0x32 : open -na kitty 
# cmd - 0x32 : yabai -m window --toggle console && (is_visible=$(yabai -m query --windows | jq '.[] | select(.title == "Alacritty") | ."is-visible"') && [ "$is_visible" = "true" ] && yabai -m window --grid 1:1:0:0:1:1 || true) || WITH_TMUX=true open -a Alacritty
# cmd + shift - 0x32 : open -na Alacritty 



rcmd - q : open -a ScreenSaverEngine

# Windows
    ## balance size of windows
    shift + alt - 0 : yabai -m space --balance

    # Navigation
    alt - h              : yabai -m window --focus west
    alt - left           : yabai -m window --focus west
    alt - right          : yabai -m window --focus east
    alt - l              : yabai -m window --focus east
    alt - up             : yabai -m window --focus north
    alt - j              : yabai -m window --focus north
    alt - k              : yabai -m window --focus south
    alt - down           : yabai -m window --focus south

    # Focus display
    #   - u, i, o: focus the left display, the middle display, or the right display
    #   - z, x:    cycle through the displays
    #   - c:       focus the recently-focused display
   # alt - u : yabai -m display --focus $(yabai -m query --displays | jq 'sort_by(.frame.x) | .[0].index')
   # alt - i : yabai -m display --focus $(yabai -m query --displays | jq 'sort_by(.frame.x) | .[1].index')
   # alt - o : yabai -m display --focus $(yabai -m query --displays | jq 'sort_by(.frame.x) | .[2].index')
 #   alt - z : yabai -m display --focus west || yabai -m display --focus $(yabai -m query --displays | jq 'sort_by(.frame.x) | last.index')
 #   alt - x : yabai -m display --focus east || yabai -m display --focus $(yabai -m query --displays | jq 'sort_by(.frame.x) | first.index')
 #   alt - c : yabai -m display --focus recent

    # Moving
    lshift + alt - h      : yabai -m window --move rel:-50:0 || yabai -m window --swap west
    lshift + alt - left   : yabai -m window --move rel:-50:0 || yabai -m window --swap west
    lshift + alt - l      :  yabai -m window --move rel:50:0 || yabai -m window --swap east
    lshift + alt - right  : yabai -m window --move rel:50:0 || yabai -m window --swap east

    lshift + alt - k      :  yabai -m window --move rel:0:-50 || yabai -m window --swap north
    lshift + alt - up     : yabai -m window --move rel:0:-50 || yabai -m window --swap north
    lshift + alt - j      : yabai -m window --move rel:0:50 || yabai -m window --swap south
    lshift + alt - down   : yabai -m window --move rel:0:50 || yabai -m window --swap south

    # Resize
    alt + cmd - up            : yabai -m window --resize top:0:-50 || \
                                    yabai -m window --resize bottom:0:-50 || \
                                        yabai -m window --resize bottom:0:-50
    alt + cmd - down          : yabai -m window --resize top:0:50 || \
                                    yabai -m window --resize bottom:0:50 || \
                                    yabai -m window --resize rel:0:50
    alt + cmd - right         : yabai -m window --resize left:50:0 || \
                                    yabai -m window --resize right:50:0
    alt + cmd - left          : yabai -m window --resize left:-50:0 || \
                                    yabai -m window --resize right:-50:0

    alt + cmd - k            : yabai -m window --resize top:0:-50 || \
                                    yabai -m window --resize bottom:0:-50 || \
                                        yabai -m window --resize bottom:0:-50
    alt + cmd - j          : yabai -m window --resize top:0:50 || \
                                    yabai -m window --resize bottom:0:50 || \
                                    yabai -m window --resize rel:0:50
    alt + cmd - l         : yabai -m window --resize left:50:0 || \
                                    yabai -m window --resize right:50:0
    alt + cmd - h          : yabai -m window --resize left:-50:0 || \
                                    yabai -m window --resize right:-50:0
    # Rotation
    alt - r                  : yabai -m space --rotate 90

    # Warp
    alt + rshift - left       : yabai -m window --warp west
    alt + rshift - right      : yabai -m window --warp east
    alt + rshift - up         : yabai -m window --warp north
    alt + rshift - down       : yabai -m window --warp south

    alt + rshift - h          : yabai -m window --warp west
    alt + rshift - l          : yabai -m window --warp east
    alt + rshift - j          : yabai -m window --warp north
    alt + rshift - k          : yabai -m window --warp south

    # Toggle Float
    alt + shift - space : yabai -m window --toggle float && \
                          yabai -m window --grid 8:8:1:1:6:6
    # Toggle Stick
    alt - s             : yabai -m window --toggle sticky

    # Toggle Topmost
    alt - t             : yabai -m window --toggle topmost

    # Toggle sticky (+float), topmost, picture-in-picture
    alt - p             :  yabai -m window --toggle sticky;\
                           yabai -m window --toggle topmost;\
                           yabai -m window --toggle pip

# Displays
    # Navigation
    ctrl - 1 : yabai -m display --focus 1
    ctrl - 2 : yabai -m display --focus 2
    ctrl - 3 : yabai -m display --focus 3

    ctrl + cmd - left   : yabai -m display --focus prev || yabai -m display --focus first
    ctrl + cmd - right  : yabai -m display --focus next || yabai -m display --focus last
    #ctrl + cmd - q      : yabai -m display --focus prev || yabai -m display --focus last
    #ctrl + cmd - w      : yabai -m display --focus next || yabai -m display --focus first

    # Move space to display
    shift + ctrl + cmd - left : yabai -m space --display prev || yabai -m space --display last
    shift + ctrl + cmd - right: yabai -m space --display next || yabai -m space --display first
    shift + ctrl + cmd - q    : yabai -m space --display prev || yabai -m space --display last
    shift + ctrl + cmd - w    : yabai -m space --display next || yabai -m space --display first

    lshift + cmd - d          : yabai -m space --display prev || yabai -m space --display last
    rshift + cmd - d          : yabai -m space --display next || yabai -m space --display first

    # Move window to display
    shift + alt + cmd - left  : (yabai -m window --display prev && yabai -m display --focus prev || yabai -m window --display last && yabai -m display --focus next)
    shift + alt + cmd - right : (yabai -m window --display next && yabai -m display --focus next || yabai -m window --display first && yabai -m display --focus prev)
    shift + alt + cmd - q     : (yabai -m window --display prev && yabai -m display --focus prev || yabai -m window --display last && yabai -m display --focus next)
    shift + alt + cmd - w     : (yabai -m window --display next && yabai -m display --focus next || yabai -m window --display first && yabai -m display --focus prev)

# Spaces
    # Navigate space by label
    alt + cmd - n : yabai -m space --focus note
    alt + cmd - c : yabai -m space --focus code
    alt + cmd - s : yabai -m space --focus surf

    # Spaces:  Alt + [NUM]
    #alt - tab : yabai -m space --focus recent
    alt - 1 : yabai -m space --focus 1
    alt - 2 : yabai -m space --focus 2
    alt - 3 : yabai -m space --focus 3
    alt - 4 : yabai -m space --focus 4
    alt - 5 : yabai -m space --focus 5
    alt - 6 : yabai -m space --focus 6
    alt - 7 : yabai -m space --focus 7
    alt - 8 : yabai -m space --focus 8

    #alt - 1 : index=1; eval "$(yabai -m query --spaces | jq --argjson index "${index}" -r '(.[] | select(.index == $index).windows[0]) as $wid | if $wid then "yabai -m window --focus \"" + ($wid | tostring) + "\"" else "skhd --key \"ctrl - " + (map(select(."native-fullscreen" == 0)) | index(map(select(.index == $index))) + 1 % 10 | tostring) + "\"" end')"
    #alt - 8 : /Users/fefa4ka/.local/bin/switch_desktop 8

    # Navigation
    #alt - tab                : /Users/fefa4ka/.local/bin/switch_desktop recent
    alt - q                  : yabai -m space --focus prev || yabai -m space --focus last
    alt - w                  : yabai -m space --focus next || yabai -m space --focus first

    # Gaps
#    alt - g                  : yabai -m space --toggle gap
    alt - f                  : yabai -m space --layout float
    alt + shift - f          : yabai -m space --layout bsp

    # Move space
    ctrl + shift - 1          : yabai -m space --display 1
    ctrl + shift - 2          : yabai -m space --display 2
    ctrl + shift - 3          : yabai -m space --display 3

    ctrl + shift - left       : yabai -m space --move prev || yabai -m space --move last
    ctrl + shift - right      : yabai -m space --move next || yabai -m space --move first

    ctrl + shift - h          : yabai -m space --move prev || yabai -m space --move last
    ctrl + shift - l          : yabai -m space --move next || yabai -m space --move first

    ctrl + shift - q          : yabai -m space --move prev || yabai -m space --move last
    ctrl + shift - w          : yabai -m space --move next || yabai -m space --move first

    # Window to space
    alt + shift - q            : yabai -m window --space prev && yabai -m space --focus prev #/Users/fefa4ka/.local/bin/prev_space
    alt + shift - w            : yabai -m window --space next && yabai -m space --focus next #/Users/fefa4ka/.local/bin/next_space

    # Create, destroy
    cmd + shift - w           : yabai -m space --destroy


    shift + alt - c           : yabai -m space --create && \
                                index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
                                yabai -m window --space "${index}" && \
                                yabai -m space --focus "${index}"
    #shift + alt - c           : /Applications/New\ Space.app/Contents/MacOS/Application\ Stub && \
    #                            index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
    #                            yabai -m window --space "${index}" && \
    #                            /Users/fefa4ka/.local/bin/switch_desktop "${index}"

    shift + cmd - c           : yabai -m space --create && \
                                index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
                                yabai -m space --focus "${index}"

    # Mirror
    alt - x                   : yabai -m space --mirror x-axis
    alt - y                   : yabai -m space --mirror y-axis
    alt - o                   : yabai -m window --toggle split


    # Sends Window to Space and shifts focus
    # Send: Shift + Cmd + [NUM]
    shift + alt - 1   : yabai -m window --space  1
    shift + alt - 2   : yabai -m window --space  2
    shift + alt - 3   : yabai -m window --space  3
    shift + alt - 4   : yabai -m window --space  4
    shift + alt - 5   : yabai -m window --space  5
    shift + alt - 6   : yabai -m window --space  6
    shift + alt - 7   : yabai -m window --space  7
    shift + alt - 8   : yabai -m window --space  8
    alt + shift - tab : yabai -m window --display recent; yabai -m display --focus recent


# toggle dark/light theme
cmd + shift + alt - t : /Users/fefa4ka/.local/bin/switch_theme

# make floating window fill screen
cmd + shift + alt - j     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
cmd + shift + alt - h   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
cmd + shift + alt - l: yabai -m window --grid 1:2:1:0:1:1

# make floating window centered
cmd + shift + alt - k : yabai -m window --grid 8:8:1:1:6:6

# focus window
# alt - h : yabai -m window --focus west

# swap managed window
# shift + alt - h : yabai -m window --swap north


# move managed window
# shift + cmd - h : yabai -m window --warp east



# make floating window fill screen
# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   /Users/fefa4ka/.local/bin/switch_desktop "${index}"

# fast focus desktop
# cmd + alt - x : /Users/fefa4ka/.local/bin/switch_desktop recent
# cmd + alt - 1 : /Users/fefa4ka/.local/bin/switch_desktop 1

# send window to desktop and follow focus
#shift + cmd - z : yabai -m window --space next; /Users/fefa4ka/.local/bin/switch_desktop next
#shift + cmd - 2 : yabai -m window --space  2; /Users/fefa4ka/.local/bin/switch_desktop 2

# focus monitor
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
#ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
#ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size

# decrease window size
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
#alt - d : yabai -m window --toggle zoom-parent
#alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
# alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

